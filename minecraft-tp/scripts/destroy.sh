#!/bin/bash

# Script de destruction pour TP Minecraft - Observabilit√©
# Ce script supprime compl√®tement l'infrastructure d√©ploy√©e

set -euo pipefail

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fonction pour afficher les messages
log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Destruction de l'infrastructure
destroy_infrastructure() {
    log_info "Destruction de l'infrastructure Terraform..."
    
    cd terraform
    
    # V√©rification de l'√©tat
    if [ ! -f terraform.tfstate ]; then
        log_warning "Aucun √©tat Terraform trouv√©. Rien √† d√©truire."
        return 0
    fi
    
    # Plan de destruction
    log_info "Planification de la destruction..."
    terraform plan -destroy
    
    # Confirmation
    echo
    log_warning "‚ö†Ô∏è  ATTENTION: Cette action va supprimer d√©finitivement:"
    echo "   - Les serveurs Minecraft et de monitoring"
    echo "   - Les adresses IP publiques"
    echo "   - Le VPC et les r√®gles de firewall"
    echo "   - Toutes les donn√©es stock√©es"
    echo
    read -p "√ätes-vous s√ªr de vouloir continuer ? Tapez 'DESTROY' pour confirmer: " -r
    echo
    
    if [[ $REPLY != "DESTROY" ]]; then
        log_warning "Destruction annul√©e"
        exit 0
    fi
    
    # Destruction
    log_info "Destruction en cours..."
    terraform destroy -auto-approve
    
    cd ..
    log_success "Infrastructure supprim√©e avec succ√®s"
}

# Nettoyage des fichiers temporaires
cleanup_files() {
    log_info "Nettoyage des fichiers temporaires..."
    
    # Suppression des fichiers de sortie Terraform
    if [ -f ansible/terraform_outputs.json ]; then
        rm ansible/terraform_outputs.json
        log_info "Fichier terraform_outputs.json supprim√©"
    fi
    
    # Suppression des fichiers de cache Ansible
    if [ -d ansible/.ansible ]; then
        rm -rf ansible/.ansible
        log_info "Cache Ansible supprim√©"
    fi
    
    log_success "Nettoyage termin√©"
}

# Fonction principale
main() {
    echo "üóëÔ∏è  Destruction TP Minecraft - Observabilit√©"
    echo "============================================="
    echo
    
    destroy_infrastructure
    cleanup_files
    
    echo
    echo "========================================"
    echo "‚úÖ Destruction termin√©e avec succ√®s !"
    echo "========================================"
    echo
    log_info "Tous les ressources ont √©t√© supprim√©es"
    log_info "Vous pouvez maintenant red√©ployer si n√©cessaire"
}

# Gestion des erreurs
trap 'log_error "Erreur lors de la destruction. V√©rifiez les logs ci-dessus."' ERR

# Ex√©cution du script
main "$@"
