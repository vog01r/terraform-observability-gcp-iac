#!/bin/bash

# Script pour g√©n√©rer du trafic en arri√®re-plan
# Usage: ./background_traffic.sh [start|stop|status]

APP_URL="http://34.69.67.242:5000"
PID_FILE="/tmp/background_traffic.pid"
LOG_FILE="/tmp/background_traffic.log"

# Fonction pour d√©marrer le trafic en arri√®re-plan
start_traffic() {
    if [ -f "$PID_FILE" ] && kill -0 $(cat "$PID_FILE") 2>/dev/null; then
        echo "‚ö†Ô∏è  Le trafic en arri√®re-plan est d√©j√† en cours d'ex√©cution (PID: $(cat $PID_FILE))"
        return 1
    fi
    
    echo "üöÄ D√©marrage du trafic en arri√®re-plan..."
    
    # Fonction de g√©n√©ration de trafic
    generate_background_traffic() {
        local count=0
        while true; do
            # G√©n√©rer des requ√™tes al√©atoires
            case $((RANDOM % 5)) in
                0) curl -s "$APP_URL/" > /dev/null ;;
                1) curl -s "$APP_URL/health" > /dev/null ;;
                2) curl -s "$APP_URL/stats" > /dev/null ;;
                3) curl -s "$APP_URL/error" > /dev/null ;;
                4) curl -s "$APP_URL/slow" > /dev/null ;;
            esac
            
            count=$((count + 1))
            
            # Logger toutes les 100 requ√™tes
            if [ $((count % 100)) -eq 0 ]; then
                echo "[$(date '+%Y-%m-%d %H:%M:%S')] $count requ√™tes effectu√©es" >> "$LOG_FILE"
            fi
            
            # Attendre entre 1 et 3 secondes
            sleep $((RANDOM % 3 + 1))
        done
    }
    
    # D√©marrer en arri√®re-plan
    generate_background_traffic &
    echo $! > "$PID_FILE"
    
    echo "‚úÖ Trafic en arri√®re-plan d√©marr√© (PID: $(cat $PID_FILE))"
    echo "üìù Logs: $LOG_FILE"
    echo "üõë Pour arr√™ter: $0 stop"
}

# Fonction pour arr√™ter le trafic
stop_traffic() {
    if [ ! -f "$PID_FILE" ]; then
        echo "‚ö†Ô∏è  Aucun trafic en arri√®re-plan en cours d'ex√©cution"
        return 1
    fi
    
    local pid=$(cat "$PID_FILE")
    
    if kill -0 "$pid" 2>/dev/null; then
        kill "$pid"
        rm -f "$PID_FILE"
        echo "üõë Trafic en arri√®re-plan arr√™t√© (PID: $pid)"
    else
        echo "‚ö†Ô∏è  Le processus n'existe plus, nettoyage du fichier PID"
        rm -f "$PID_FILE"
    fi
}

# Fonction pour afficher le statut
show_status() {
    if [ -f "$PID_FILE" ] && kill -0 $(cat "$PID_FILE") 2>/dev/null; then
        local pid=$(cat "$PID_FILE")
        echo "‚úÖ Trafic en arri√®re-plan actif (PID: $pid)"
        
        if [ -f "$LOG_FILE" ]; then
            echo "üìù Derni√®res entr√©es du log:"
            tail -5 "$LOG_FILE"
        fi
        
        echo ""
        echo "üìä Statistiques actuelles de l'application:"
        curl -s "$APP_URL/stats" | python3 -m json.tool 2>/dev/null || echo "Impossible de r√©cup√©rer les stats"
    else
        echo "‚ùå Aucun trafic en arri√®re-plan en cours d'ex√©cution"
        if [ -f "$PID_FILE" ]; then
            rm -f "$PID_FILE"
        fi
    fi
}

# Fonction pour afficher les logs
show_logs() {
    if [ -f "$LOG_FILE" ]; then
        echo "üìù Logs du trafic en arri√®re-plan:"
        echo "=================================="
        tail -20 "$LOG_FILE"
    else
        echo "‚ö†Ô∏è  Aucun fichier de log trouv√©"
    fi
}

# Fonction d'aide
show_help() {
    echo "Usage: $0 [start|stop|status|logs|help]"
    echo ""
    echo "Commandes:"
    echo "  start   - D√©marrer le trafic en arri√®re-plan"
    echo "  stop    - Arr√™ter le trafic en arri√®re-plan"
    echo "  status  - Afficher le statut et les statistiques"
    echo "  logs    - Afficher les logs"
    echo "  help    - Afficher cette aide"
    echo ""
    echo "Exemples:"
    echo "  $0 start    # D√©marrer le trafic"
    echo "  $0 status   # Voir le statut"
    echo "  $0 stop     # Arr√™ter le trafic"
}

# Gestion des arguments
case "${1:-help}" in
    start)
        start_traffic
        ;;
    stop)
        stop_traffic
        ;;
    status)
        show_status
        ;;
    logs)
        show_logs
        ;;
    help|--help|-h)
        show_help
        ;;
    *)
        echo "‚ùå Commande invalide: $1"
        echo ""
        show_help
        exit 1
        ;;
esac
